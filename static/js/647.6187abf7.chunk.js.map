{"version":3,"file":"static/js/647.6187abf7.chunk.js","mappings":"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","sources":["webpack://aston_project/./src/pages/MoviePage/moviePage.module.css?97aa","pages/MoviePage/MoviePage.tsx","hooks/useFireStore.ts","ui/components/FavouriteButton/FavouriteButton.tsx","hooks/useFavourites.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"moviePage_wrapper__uTEXt\",\"card\":\"moviePage_card__tlK04\",\"main\":\"moviePage_main__IlHbL\",\"leftPart\":\"moviePage_leftPart__npBrV\",\"rightPart\":\"moviePage_rightPart__Cjw2Q\",\"infoUnderLogo\":\"moviePage_infoUnderLogo__Kw6Ga\",\"name\":\"moviePage_name__P57DJ\",\"description\":\"moviePage_description__W8a0Q\",\"descriptTitle\":\"moviePage_descriptTitle__zzwjl\",\"descripText\":\"moviePage_descripText__slxsc\",\"otherInfo\":\"moviePage_otherInfo__iFWUu\",\"buttons\":\"moviePage_buttons__tvX2D\",\"dark\":\"moviePage_dark__D+vc9\"};","import React from \"react\";\nimport s from \"./moviePage.module.css\";\nimport { useParams } from \"react-router-dom\";\nimport { movieApi } from \"../../store/rtkQuery/movieApi\";\nimport Preloader from \"../../ui/elements/Preloader/Preloader\";\nimport { FavouriteButton } from \"../../ui/components/FavouriteButton/FavouriteButton\";\nimport cn from \"classnames\";\nimport { useTheme } from \"../../context/ThemeContext\";\nimport { useFireStore } from \"../../hooks/useFireStore\";\n\nconst MoviePage = () => {\n  const { id } = useParams();\n  const { theme } = useTheme();\n  const { isLoading } = useFireStore();\n\n  if (!id) {\n    return <div>Упс, что то пошло не так</div>;\n  }\n  const { data: movieInfo } = movieApi.useGetMovieQuery(parseInt(id));\n\n  return (\n    <div className={s.wrapper}>\n      {movieInfo && !isLoading ? (\n        <div\n          className={cn(s.card, {\n            [s.dark]: theme === \"dark\",\n            [s.light]: theme === \"light\",\n          })}\n        >\n          <div className={s.main}>\n            <div className={s.leftPart}>\n              <img src={movieInfo.poster.url} alt=\"poster\" />\n              <div className={s.infoUnderLogo}>\n                <div className={s.otherInfo}>\n                  <div className={s.descriptTitle}>Жанр:</div>\n                  <div className={s.descripText}>\n                    {movieInfo.genres.map((item) => `${item.name} `)}\n                  </div>\n                </div>\n                <div className={s.otherInfo}>\n                  <div className={s.descriptTitle}>Рейтинг КиноПоиска:</div>\n                  <div className={s.descripText}>{movieInfo.rating.kp}</div>\n                </div>\n                <div className={s.otherInfo}>\n                  <div className={s.descriptTitle}>Год:</div>\n                  <div className={s.descripText}>{movieInfo.year}</div>\n                </div>\n                {movieInfo.budget.value && (\n                  <div className={s.otherInfo}>\n                    <div className={s.descriptTitle}>Бюджет:</div>\n                    <div\n                      className={s.descripText}\n                    >{`${movieInfo.budget.value}${movieInfo.budget.currency}`}</div>\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className={s.rightPart}>\n              <div className={s.name}>{movieInfo.name}</div>\n              <div className={s.description}>\n                <div className={s.descriptTitle}>Описание:</div>\n                <div className={s.descripText}>{movieInfo.description}</div>\n              </div>\n              <div className={s.buttons}>\n                <FavouriteButton movieId={parseInt(id)} />\n              </div>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <Preloader width={45} />\n      )}\n    </div>\n  );\n};\n\nexport default MoviePage;\n","import { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { isAuth, user } from \"../store/auth/authSlice\";\nimport { favouriteApi } from \"../store/rtkQuery/favoritesApi\";\n\nexport const useFireStore = () => {\n  const userInfo = useSelector(user);\n  const isLogged = useSelector(isAuth);\n  const [trigger, { isLoading }] = favouriteApi.useLazyGetAllFavouritesQuery();\n\n  useEffect(() => {\n    if (isLogged) trigger(userInfo?.email);\n  }, [isLogged, trigger, userInfo?.email]);\n\n  return {\n    isLoading,\n  };\n};\n","import React, { memo, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useSelector } from \"react-redux\";\nimport { useFavourites } from \"../../../hooks/useFavourites\";\nimport { isAuth } from \"../../../store/auth/authSlice\";\nimport { Button } from \"../../elements/Button/Button\";\nimport Preloader from \"../../elements/Preloader/Preloader\";\n\ninterface FavourButtonType {\n  movieId: number;\n  isFavourPage?: boolean;\n}\n\nexport const FavouriteButton = memo(\n  ({ movieId, isFavourPage = false }: FavourButtonType) => {\n    const {\n      handleAddToFavourite,\n      isFetching,\n      handleRemoveFromFavourite,\n      hasInFavourite,\n    } = useFavourites();\n\n    const [isHas, setHas] = useState<boolean>(hasInFavourite(movieId));\n    const isLogged = useSelector(isAuth);\n\n    const addFavoriteHandler = async (id: number) => {\n      if (isLogged) {\n        await handleAddToFavourite(id);\n        setHas((prev) => !prev);\n      } else {\n        toast.error(\"Чтобы продолжить надо авторизоваться\");\n      }\n    };\n\n    const removeHandler = async (id: number) => {\n      if (isLogged) {\n        await handleRemoveFromFavourite(id);\n        setHas((prev) => !prev);\n      } else {\n        toast.error(\"Чтобы продолжить надо авторизоваться\");\n      }\n    };\n\n    if (isFavourPage) {\n      return (\n        <Button\n          variant=\"red\"\n          onClick={() => removeHandler(movieId)}\n          disabled={isFetching}\n        >\n          {isFetching ? <Preloader width={15} /> : \"Удалить из избранного\"}\n        </Button>\n      );\n    }\n\n    return (\n      <>\n        {isHas && isLogged ? (\n          <Button\n            variant=\"red\"\n            onClick={() => removeHandler(movieId)}\n            disabled={isFetching}\n          >\n            {isFetching ? <Preloader width={15} /> : \"Удалить из избранного\"}\n          </Button>\n        ) : (\n          <Button\n            variant=\"green\"\n            onClick={() => addFavoriteHandler(movieId)}\n            disabled={isFetching}\n          >\n            {isFetching ? <Preloader width={15} /> : \"В избранное\"}\n          </Button>\n        )}\n      </>\n    );\n  },\n);\n","import { useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useSelector } from \"react-redux\";\nimport { user } from \"../store/auth/authSlice\";\nimport { favouriteApi } from \"../store/rtkQuery/favoritesApi\";\n\nexport const useFavourites = () => {\n  const userInfo = useSelector(user);\n  const [isLoadTest, setIsLoadTest] = useState<boolean>(false);\n\n  const { data: favouriteList = [], isFetching } =\n    favouriteApi.useGetAllFavouritesQuery(userInfo?.email);\n\n  //в рамках интенсива, нет возможности обновлять один элемент базы.\n\n  useEffect(() => {\n    if (!isFetching) setIsLoadTest(isFetching);\n  }, [isFetching]);\n\n  const hasInFavourite = (id: number) => {\n    return favouriteList.includes(id);\n  };\n\n  const [addInFavourite, addResult] = favouriteApi.useAddToFavouriteMutation();\n\n  const [removeFavourite, removeResult] =\n    favouriteApi.useRemoveFromFavouriteMutation();\n\n  const handleAddToFavourite = async (id: number) => {\n    try {\n      setIsLoadTest(true);\n      await addInFavourite({ email: userInfo?.email, id });\n      toast.success(\"Успешно добавлено\");\n    } catch (e) {\n      toast.error(\"Подождите...\");\n    }\n  };\n\n  const handleRemoveFromFavourite = async (id: number) => {\n    try {\n      setIsLoadTest(true);\n      await removeFavourite({ email: userInfo?.email, id });\n      toast.success(\"Успешно удалено\");\n    } catch (e) {\n      toast.error(\"Подождите...\");\n    }\n  };\n\n  return {\n    hasInFavourite,\n    isFetching: addResult.isLoading || removeResult.isLoading || isLoadTest,\n    handleAddToFavourite,\n    handleRemoveFromFavourite,\n  };\n};\n"],"names":["MoviePage","id","useParams","theme","useTheme","isLoading","useFireStore","userInfo","useSelector","user","isLogged","isAuth","trigger","favouriteApi","useLazyGetAllFavouritesQuery","useEffect","email","_jsx","children","data","movieInfo","movieApi","useGetMovieQuery","parseInt","className","s","wrapper","cn","card","dark","light","_jsxs","main","leftPart","src","poster","url","alt","infoUnderLogo","otherInfo","descriptTitle","descripText","genres","map","item","concat","name","rating","kp","year","budget","value","currency","rightPart","description","buttons","FavouriteButton","movieId","Preloader","width","memo","_ref","isFavourPage","handleAddToFavourite","isFetching","handleRemoveFromFavourite","hasInFavourite","useFavourites","isLoadTest","setIsLoadTest","useState","favouriteList","useGetAllFavouritesQuery","addInFavourite","addResult","useAddToFavouriteMutation","removeFavourite","removeResult","useRemoveFromFavouriteMutation","includes","async","toast","success","e","error","isHas","setHas","removeHandler","prev","Button","variant","onClick","disabled","_Fragment","addFavoriteHandler"],"sourceRoot":""}