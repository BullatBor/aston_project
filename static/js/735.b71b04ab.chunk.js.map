{"version":3,"file":"static/js/735.b71b04ab.chunk.js","mappings":"qLACA,QAA2B,yB,aCK3B,MAeA,EAfeA,KACb,MAAM,aAAEC,IAAiBC,EAAAA,EAAAA,KACnBC,GAAWC,EAAAA,EAAAA,MAMjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAWC,UACzBH,EAAAA,EAAAA,KAACI,EAAAA,EAAQ,CAACC,YAAY,qEAAcC,SAPhBC,MAAOC,EAAeC,WAClCb,EAAaY,EAAOC,IAC5BX,EAAS,IACX,KAKM,C,wDChBV,QAAuB,uBAAvB,EAAqD,uBAArD,EAA0F,8BAA1F,EAAiI,yBAAjI,EAAsK,4BAAtK,EAA4M,0BAA5M,EAA8O,wBAA9O,EAA8Q,wBAA9Q,EAAmT,6BAAnT,EAAyV,yB,iFCczV,MA4EA,EA5EiBY,IAA+C,IAA9C,SAAEJ,EAAQ,YAAED,GAA4BK,EACxD,MAAMC,GAASC,EAAAA,EAAAA,IAAYC,EAAAA,IAErBC,EAAeC,EAAAA,KAAaC,MAAM,CACtCR,MAAOO,EAAAA,KAAaP,MAAM,0DAAkBS,SAAS,qGACrDR,SAAUM,EAAAA,KACPG,IAAI,EAAG,0HACPD,SAAS,uGAEd,OACEE,EAAAA,EAAAA,MAAA,OAAKlB,UAAWC,EAAOC,SAAA,EACrBH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,UAC5BH,EAAAA,EAAAA,KAAA,QAAAG,SAAOE,OAETL,EAAAA,EAAAA,KAACoB,EAAAA,GAAM,CACLC,cAAe,CACbb,MAAO,GACPC,SAAU,IAEZa,iBAAkBR,EAClBR,SAAWiB,IACTjB,EAASiB,EAAOf,MAAOe,EAAOd,SAAS,EACvCN,SAEDqB,IAAA,IAAC,OAAEC,EAAM,QAAEC,GAASF,EAAA,OACnBL,EAAAA,EAAAA,MAACQ,EAAAA,GAAI,CAAC1B,UAAWC,EAAOC,SAAA,EACtBgB,EAAAA,EAAAA,MAAA,OAAKlB,UAAWC,EAASC,SAAA,EACvBgB,EAAAA,EAAAA,MAAA,OAAKlB,UAAWC,EAAUC,SAAA,EACxBH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,oCACNgB,EAAAA,EAAAA,MAAA,OAAKlB,UAAWC,EAAaC,SAAA,EAC3BH,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CACJC,KAAK,QACLC,KAAK,QACLC,YAAY,QACZ9B,UAAW+B,IAAG9B,EAAS,CACrB,CAACA,GAAUuB,EAAOjB,OAASkB,EAAQlB,UAGtCiB,EAAOjB,OAASkB,EAAQlB,OACvBR,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYC,SAAEsB,EAAOjB,QACnC,YAGRW,EAAAA,EAAAA,MAAA,OAAKlB,UAAWC,EAAUC,SAAA,EACxBH,EAAAA,EAAAA,KAAA,QAAAG,SAAM,0CACNgB,EAAAA,EAAAA,MAAA,OAAKlB,UAAWC,EAAaC,SAAA,EAC3BH,EAAAA,EAAAA,KAAC4B,EAAAA,GAAK,CACJC,KAAK,WACLC,KAAK,WACLC,YAAY,WACZ9B,UAAW+B,IAAG9B,EAAS,CACrB,CAACA,GAAUuB,EAAOhB,UAAYiB,EAAQjB,aAGzCgB,EAAOhB,UAAYiB,EAAQjB,UAC1BT,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAYC,SAAEsB,EAAOhB,WACnC,eAIVT,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAASC,UACvBH,EAAAA,EAAAA,KAACiC,EAAAA,EAAM,CAACH,KAAK,SAASI,QAAQ,QAAQC,SAAUxB,EAAOR,SACpDQ,GAASX,EAAAA,EAAAA,KAACoC,EAAAA,EAAS,IAAM/B,QAGzB,MAGP,C","sources":["webpack://aston_project/./src/pages/SignUp/signUp.module.css?c7d2","pages/SignUp/SignUp.tsx","webpack://aston_project/./src/ui/components/AuthForm/authForm.module.css?8afa","ui/components/AuthForm/AuthForm.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"signForm\":\"signUp_signForm__gJ5e3\"};","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAuth } from \"../../hooks/useAuth\";\nimport AuthForm from \"../../ui/components/AuthForm/AuthForm\";\nimport s from \"./signUp.module.css\";\n\nconst SignUp = () => {\n  const { registration } = useAuth();\n  const navigate = useNavigate();\n  const onSubmitRegistr = async (email: string, password: string) => {\n    if (await registration(email, password)) {\n      navigate(\"/\");\n    }\n  };\n  return (\n    <div className={s.signForm}>\n      <AuthForm headerTitle=\"Регистрация\" onSubmit={onSubmitRegistr} />\n    </div>\n  );\n};\n\nexport default SignUp;\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"authForm_main__R1F50\",\"form\":\"authForm_form__oGVvV\",\"headerTitle\":\"authForm_headerTitle__zLEc3\",\"inputs\":\"authForm_inputs__3KRnL\",\"errorText\":\"authForm_errorText__GM6WV\",\"element\":\"authForm_element__7XMrh\",\"error\":\"authForm_error__3jwaP\",\"input\":\"authForm_input__r49NP\",\"inputBlock\":\"authForm_inputBlock__fbq9o\",\"submit\":\"authForm_submit__zwhhT\"};","import { Field, Form, Formik } from \"formik\";\nimport React from \"react\";\nimport s from \"./authForm.module.css\";\nimport cn from \"classnames\";\nimport * as Yup from \"yup\";\nimport Button from \"../../elements/Button/Button\";\nimport { useSelector } from \"react-redux\";\nimport { isLoading } from \"../../../store/auth/authSlice\";\nimport Preloader from \"../../elements/Preloader/Preloader\";\nimport PropTypes from \"prop-types\";\n\ninterface AuthFormProps {\n  headerTitle: string;\n  onSubmit: (email: string, password: string) => void;\n}\nconst AuthForm = ({ onSubmit, headerTitle }: AuthFormProps) => {\n  const isLoad = useSelector(isLoading);\n\n  const SignupSchema = Yup.object().shape({\n    email: Yup.string().email(\"Неверный email\").required(\"Обязательное поле\"),\n    password: Yup.string()\n      .min(6, \"Длина пароля 6 символов\")\n      .required(\"Обязательное поле\"),\n  });\n  return (\n    <div className={s.main}>\n      <div className={s.headerTitle}>\n        <span>{headerTitle}</span>\n      </div>\n      <Formik\n        initialValues={{\n          email: \"\",\n          password: \"\",\n        }}\n        validationSchema={SignupSchema}\n        onSubmit={(values) => {\n          onSubmit(values.email, values.password);\n        }}\n      >\n        {({ errors, touched }) => (\n          <Form className={s.form}>\n            <div className={s.inputs}>\n              <div className={s.element}>\n                <span>Почта</span>\n                <div className={s.inputBlock}>\n                  <Field\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"email\"\n                    className={cn(s.input, {\n                      [s.error]: errors.email && touched.email,\n                    })}\n                  />\n                  {errors.email && touched.email ? (\n                    <div className={s.errorText}>{errors.email}</div>\n                  ) : null}\n                </div>\n              </div>\n              <div className={s.element}>\n                <span>Пароль</span>\n                <div className={s.inputBlock}>\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"password\"\n                    className={cn(s.input, {\n                      [s.error]: errors.password && touched.password,\n                    })}\n                  />\n                  {errors.password && touched.password ? (\n                    <div className={s.errorText}>{errors.password}</div>\n                  ) : null}\n                </div>\n              </div>\n            </div>\n            <div className={s.submit}>\n              <Button type=\"submit\" variant=\"green\" disabled={isLoad}>\n                {isLoad ? <Preloader /> : headerTitle}\n              </Button>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n};\n\nAuthForm.propTypes = {\n  headerTitle: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\nexport default AuthForm;\n"],"names":["SignUp","registration","useAuth","navigate","useNavigate","_jsx","className","s","children","AuthForm","headerTitle","onSubmit","async","email","password","_ref","isLoad","useSelector","isLoading","SignupSchema","Yup","shape","required","min","_jsxs","Formik","initialValues","validationSchema","values","_ref2","errors","touched","Form","Field","name","type","placeholder","cn","Button","variant","disabled","Preloader"],"sourceRoot":""}