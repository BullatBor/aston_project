{"version":3,"file":"static/js/27.54898820.chunk.js","mappings":"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","sources":["webpack://aston_project/./src/ui/components/FavouriteMovieCard/favouriteMovieCard.module.css?e382","ui/components/FavouriteMovieCard/FavouriteMovieCard.tsx","webpack://aston_project/./src/pages/Favorites/favourite.module.css?b6ca","pages/Favorites/Favorites.tsx","ui/components/FavouriteButton/FavouriteButton.tsx","hooks/useFavourites.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"favouriteMovieCard_wrapper__u4BOq\",\"poster\":\"favouriteMovieCard_poster__ZcmLT\",\"rightBlock\":\"favouriteMovieCard_rightBlock__r2+SQ\",\"descriptions\":\"favouriteMovieCard_descriptions__--Cej\",\"buttons\":\"favouriteMovieCard_buttons__NHesC\",\"header\":\"favouriteMovieCard_header__oihif\",\"name\":\"favouriteMovieCard_name__K0Ocv\",\"value\":\"favouriteMovieCard_value__+m6sa\",\"category\":\"favouriteMovieCard_category__PAEJ9\",\"title\":\"favouriteMovieCard_title__+4Nbd\",\"descriptionTitle\":\"favouriteMovieCard_descriptionTitle__narhn\",\"descriptionText\":\"favouriteMovieCard_descriptionText__gwCPl\",\"preloader\":\"favouriteMovieCard_preloader__gdljC\",\"dark\":\"favouriteMovieCard_dark__F4Scl\",\"light\":\"favouriteMovieCard_light__qpMKl\"};","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { movieApi } from \"../../../store/rtkQuery/movieApi\";\nimport Preloader from \"../../elements/Preloader/Preloader\";\nimport { FavouriteButton } from \"../FavouriteButton/FavouriteButton\";\nimport s from \"./favouriteMovieCard.module.css\";\nimport cn from \"classnames\";\nimport { useTheme } from \"../../../context/ThemeContext\";\n\ninterface FavouriteMovieCardProps {\n  id: number;\n}\n\nconst FavouriteMovieCard = ({ id }: FavouriteMovieCardProps) => {\n  const { data: movieInfo } = movieApi.useGetMovieQuery(id);\n  const { theme } = useTheme();\n\n  const navigate = useNavigate();\n\n  const movieLinkHandler = (id: number) => {\n    navigate(`/movie/${id}`);\n  };\n\n  return (\n    <>\n      <div\n        className={cn(s.wrapper, {\n          [s.dark]: theme === \"dark\",\n          [s.light]: theme === \"light\",\n        })}\n      >\n        {movieInfo ? (\n          <>\n            <div className={s.poster}>\n              <img\n                src={movieInfo.poster.url}\n                alt=\"poster\"\n                onClick={() => movieLinkHandler(id)}\n              />\n            </div>\n            <div className={s.rightBlock}>\n              <div className={s.descriptions}>\n                <div className={s.header}>\n                  <span className={s.title}>Название: </span>\n                  <span className={s.name} onClick={() => movieLinkHandler(id)}>\n                    {movieInfo.name}\n                  </span>\n                </div>\n                <div className={s.header}>\n                  <span className={s.title}>Год:</span>\n                  <span className={s.value}>{movieInfo.year}</span>\n                </div>\n                <div className={s.header}>\n                  <span className={s.title}>Рейтинг КиноПоиска:</span>\n                  <span className={s.value}>{movieInfo.rating.kp}</span>\n                </div>\n                <div className={s.header}>\n                  <span className={s.title}>Страна:</span>\n                  <span className={s.value}>{movieInfo.countries[0].name}</span>\n                </div>\n                <div className={s.description}>\n                  <span className={s.descriptionTitle}>Краткое описание:</span>\n                  <span className={s.descriptionText}>\n                    {movieInfo.shortDescription}\n                  </span>\n                </div>\n              </div>\n              <div className={s.buttons}>\n                <FavouriteButton movieId={id} isFavourPage={true} />\n              </div>\n            </div>\n          </>\n        ) : (\n          <div className={s.preloader}>\n            <Preloader width={50} />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default FavouriteMovieCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"favourite_wrapper__mRsca\",\"items\":\"favourite_items__ypw5h\",\"empty\":\"favourite_empty__icBnm\",\"dark\":\"favourite_dark__PaA5k\",\"light\":\"favourite_light__Gm7EY\"};","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { user } from \"../../store/auth/authSlice\";\nimport { favouriteApi } from \"../../store/rtkQuery/favoritesApi\";\nimport FavouriteMovieCard from \"../../ui/components/FavouriteMovieCard/FavouriteMovieCard\";\nimport s from \"./favourite.module.css\";\nimport { EmptyTitle } from \"../../ui/components/EmptyTitle/EmptyTitle\";\nimport Preloader from \"../../ui/elements/Preloader/Preloader\";\n\nconst Favorites = () => {\n  const userInfo = useSelector(user);\n\n  const { data: favouriteList = [], isLoading } =\n    favouriteApi.useGetAllFavouritesQuery(userInfo?.email);\n\n  return (\n    <div className={s.wrapper}>\n      {isLoading ? (\n        <Preloader width={45} />\n      ) : favouriteList.length > 0 ? (\n        <div className={s.items}>\n          {favouriteList.map((item) => {\n            return <FavouriteMovieCard key={item} id={item} />;\n          })}\n        </div>\n      ) : (\n        <EmptyTitle title=\"Ничего нет\" />\n      )}\n    </div>\n  );\n};\n\nexport default Favorites;\n","import React, { memo, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useSelector } from \"react-redux\";\nimport { useFavourites } from \"../../../hooks/useFavourites\";\nimport { isAuth } from \"../../../store/auth/authSlice\";\nimport { Button } from \"../../elements/Button/Button\";\nimport Preloader from \"../../elements/Preloader/Preloader\";\n\ninterface FavourButtonType {\n  movieId: number;\n  isFavourPage?: boolean;\n}\n\nexport const FavouriteButton = memo(\n  ({ movieId, isFavourPage = false }: FavourButtonType) => {\n    const {\n      handleAddToFavourite,\n      isFetching,\n      handleRemoveFromFavourite,\n      hasInFavourite,\n    } = useFavourites();\n\n    const [isHas, setHas] = useState<boolean>(hasInFavourite(movieId));\n    const isLogged = useSelector(isAuth);\n\n    const addFavoriteHandler = async (id: number) => {\n      if (isLogged) {\n        await handleAddToFavourite(id);\n        setHas((prev) => !prev);\n      } else {\n        toast.error(\"Чтобы продолжить надо авторизоваться\");\n      }\n    };\n\n    const removeHandler = async (id: number) => {\n      if (isLogged) {\n        await handleRemoveFromFavourite(id);\n        setHas((prev) => !prev);\n      } else {\n        toast.error(\"Чтобы продолжить надо авторизоваться\");\n      }\n    };\n\n    if (isFavourPage) {\n      return (\n        <Button\n          variant=\"red\"\n          onClick={() => removeHandler(movieId)}\n          disabled={isFetching}\n        >\n          {isFetching ? <Preloader width={15} /> : \"Удалить из избранного\"}\n        </Button>\n      );\n    }\n\n    return (\n      <>\n        {isHas && isLogged ? (\n          <Button\n            variant=\"red\"\n            onClick={() => removeHandler(movieId)}\n            disabled={isFetching}\n          >\n            {isFetching ? <Preloader width={15} /> : \"Удалить из избранного\"}\n          </Button>\n        ) : (\n          <Button\n            variant=\"green\"\n            onClick={() => addFavoriteHandler(movieId)}\n            disabled={isFetching}\n          >\n            {isFetching ? <Preloader width={15} /> : \"В избранное\"}\n          </Button>\n        )}\n      </>\n    );\n  },\n);\n","import { useEffect, useState } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { useSelector } from \"react-redux\";\nimport { user } from \"../store/auth/authSlice\";\nimport { favouriteApi } from \"../store/rtkQuery/favoritesApi\";\n\nexport const useFavourites = () => {\n  const userInfo = useSelector(user);\n  const [isLoadTest, setIsLoadTest] = useState<boolean>(false);\n\n  const { data: favouriteList = [], isFetching } =\n    favouriteApi.useGetAllFavouritesQuery(userInfo?.email);\n\n  //в рамках интенсива, нет возможности обновлять один элемент базы.\n\n  useEffect(() => {\n    if (!isFetching) setIsLoadTest(isFetching);\n  }, [isFetching]);\n\n  const hasInFavourite = (id: number) => {\n    return favouriteList.includes(id);\n  };\n\n  const [addInFavourite, addResult] = favouriteApi.useAddToFavouriteMutation();\n\n  const [removeFavourite, removeResult] =\n    favouriteApi.useRemoveFromFavouriteMutation();\n\n  const handleAddToFavourite = async (id: number) => {\n    try {\n      setIsLoadTest(true);\n      await addInFavourite({ email: userInfo?.email, id });\n      toast.success(\"Успешно добавлено\");\n    } catch (e) {\n      toast.error(\"Подождите...\");\n    }\n  };\n\n  const handleRemoveFromFavourite = async (id: number) => {\n    try {\n      setIsLoadTest(true);\n      await removeFavourite({ email: userInfo?.email, id });\n      toast.success(\"Успешно удалено\");\n    } catch (e) {\n      toast.error(\"Подождите...\");\n    }\n  };\n\n  return {\n    hasInFavourite,\n    isFetching: addResult.isLoading || removeResult.isLoading || isLoadTest,\n    handleAddToFavourite,\n    handleRemoveFromFavourite,\n  };\n};\n"],"names":["_ref","id","data","movieInfo","movieApi","useGetMovieQuery","theme","useTheme","navigate","useNavigate","movieLinkHandler","concat","_jsx","_Fragment","children","className","cn","s","wrapper","dark","light","_jsxs","poster","src","url","alt","onClick","rightBlock","descriptions","header","title","name","value","year","rating","kp","countries","description","descriptionTitle","descriptionText","shortDescription","buttons","FavouriteButton","movieId","isFavourPage","preloader","Preloader","width","Favorites","userInfo","useSelector","user","favouriteList","isLoading","favouriteApi","useGetAllFavouritesQuery","email","length","map","item","FavouriteMovieCard","EmptyTitle","memo","handleAddToFavourite","isFetching","handleRemoveFromFavourite","hasInFavourite","useFavourites","isLoadTest","setIsLoadTest","useState","useEffect","addInFavourite","addResult","useAddToFavouriteMutation","removeFavourite","removeResult","useRemoveFromFavouriteMutation","includes","async","toast","success","e","error","isHas","setHas","isLogged","isAuth","removeHandler","prev","Button","variant","disabled","addFavoriteHandler"],"sourceRoot":""}